{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","setcategories","i","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAgB9C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,SAEI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCLlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAGbC,EAHa,iDAGmCC,UAAUH,GAH7C,+DAKAI,MAAMF,GALN,cAKbG,EALa,gBAMIA,EAAKC,OANT,uBAMXC,EANW,EAMXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAgBZM,GAhBY,4CAAH,sDCCPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGrC,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAiBtC,OAXAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAC,GACnBC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,UAER,CAACpB,IAEGqB,EDb2BM,CAAa3B,GAAjCa,EAFuB,EAE7BN,KAAca,EAFe,EAEfA,QAEtB,OACI,qCACI,6BAAKpB,IAEL,sBAAKgB,UAAU,YAAf,UACKI,GAAW,mBAAGJ,UAAU,mCAAb,sBAERH,EAAOJ,KAAI,SAAAC,GAAG,OAEV,cAAC,EAAD,eAEQA,GADCA,EAAIC,cEfxBiB,EAAe,WAAO,IAAD,EAEM1C,mBAAS,CAAC,SAFhB,mBAEvB2C,EAFuB,KAEXC,EAFW,KAQ9B,OACI,qCAGI,gDACA,cAAC,EAAD,CAAa7C,cAAe6C,IAC5B,uBAGA,6BAEQD,EAAWpB,KAAI,SAACT,EAAU+B,GAAX,OACX,cAAC,EAAD,CAEI/B,SAAUA,GADLA,Y,MCpBjCgC,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.9ac27c2a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <input\r\n                type='text'\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async (category) => {\r\n\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=ia66VFhRhULEKCzU9QLTxCfJc0LSYfoe`;\r\n\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n\r\n}\r\n","\r\nimport React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInDown\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n}\r\n","\r\n\r\nimport React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            <div className=\"card-grid\">\r\n                {loading && <p className=\"animate__animated animate__flash\">Cargando</p>}\r\n                {\r\n                    images.map(img => (\r\n\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then(imgs => {\r\n            setTimeout(() => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            }, 2000);\r\n        });\r\n    }, [category]);\r\n\r\n    return state;\r\n}\r\n","\r\n\r\nimport React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setcategories] = useState(['Goku']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setcategories(['nelson', ...categories]);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory setCategories={setcategories} />\r\n            <hr />\r\n\r\n\r\n            <ol>\r\n                {\r\n                    categories.map((category, i) => (\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category} />\r\n                    )\r\n\r\n\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n\n  <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}